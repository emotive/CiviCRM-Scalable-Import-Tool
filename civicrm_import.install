<?php
// $Id

/**
 * Implementation of hook_install().
 */
function civicrm_import_install() {
  // Create tables.
  drupal_install_schema('civicrm_import');
}

/**
 * Implementation of hook_install().
 */

function civicrm_import_uninstall() {
  // Remove tables
  drupal_uninstall_schema('civicrm_import');
  
  // Kill module variables
  @db_query("DELETE FROM {variable} WHERE name LIKE 'civicrm_import_%'");
}

/**
 * Implementation of hook_schema().
 */
function civicrm_import_schema() {

	$schema['civicrm_import_job'] = array(
		'description' => t('Stores civicrm import jobs'),
		'fields' => array(		
			'jobid' => array(
				'type' => 'serial',
				'not null' => TRUE,
				'description' => t('primary key'),
			),
			'name' => array(
				'type' => 'varchar',
				'not null' => FALSE,
				'length' => 64,
				'default' => 'Untitled',
				'description' => t('The import name'),
			),
			'fid' => array(
				'type' => 'int',
				'not null' => TRUE,
				'size' => 'big',
				'description' => t('File id of the import file'),
			),
			'type' => array(
				'type' => 'varchar',
				'not null' => TRUE,
				'length' => 32,
				'default' => 'import',
				'description' => t('The import type'),
			),
			'headings' => array(
				'type' => 'int',
				'not null' => TRUE,
				'size' => 'tiny',
				'default' => 0,
				'description' => t('Include/Exclude CSV headings'),
			),
			'dupe_check' => array(
				'type' => 'int',
				'not null' => TRUE,
				'size' => 'tiny',
				'default' => 0,
				'description' => t('Check for duplicate contacts'),
			),
			'date_format' => array(
				'type' => 'varchar',
				'not null' => TRUE,
				'length' => 64,
				'default' => 'yyyy-mm-dd',
				'description' => t('Date Format'),
			),
			'import_groups' => array(
				'type' => 'text',
				'size' => 'normal',
				'not null' => FALSE,
				'description' => t('add imported records to groups'),
			),
			'import_tags' => array(
				'type' => 'text',
				'size' => 'normal',
				'not null' => FALSE,
				'description' => t('add imported records to tags'),
			),
			'mapping' => array(
				'type' => 'text',
				'size' => 'medium',
				'not null' => TRUE,
				'description' => t('import file mapping'),
			),
			'status' => array(
				'type' => 'int',
				'not null' => TRUE,
				'default' => 0,
				'size' => 'tiny',
				'description' => t('Status of the job 0 = incomplete 1 = complete 99 = running'),
			),
			'cron' => array(
				'type' => 'int',
				'not null' => TRUE,
				'default' => 0,
				'size' => 'tiny',
				'description' => t('See if cron has ran or not'),
			),
			'uid' => array(
				'type' => 'int',
				'not null' => TRUE,
				'size' => 'big',
				'description' => t('Drupal user who submitted this import job'),
			),
			'date_submitted' => array(
				'type' => 'datetime',
				'not null' => TRUE,
				'description' => t('Date the job is submitted'),
			),
			'date_started' => array(
				'type' => 'datetime',
				'not null' => TRUE,
				'description' => t('Date the job is started'),
			),
			'date_complete' => array(
				'type' => 'datetime',
				'not null' => TRUE,
				'description' => t('Date the job is completed'),
			),
			'contact_count' => array(
				'type' => 'int',
				'size' => 'big',
				'description' => t('Number of contacts found on the CSV file'),
				'default' => 0,
			),
			'import_count' => array(
				'type' => 'int',
				'size' => 'big',
				'description' => t('Number of contacts imported'),
				'default' => 0,
			),
			'location_count' => array(
				'type' => 'int',
				'size' => 'big',
				'description' => t('Number of contacts location (address, phone number, etc imported'),
				'default' => 0,
			),
			'log' => array(
				'type' => 'text',
				'size' => 'medium',
				'description' => t('Contains serialized array of log path for an import job'),
				'default' => null,
			),
		),
		'primary key' => array('jobid'),
	);
	
	$schema['civicrm_import_mapping'] = array(
			'description' => t('Stores civicrm import mappings'),
			'fields' => array(		
				'mapping_id' => array(
					'type' => 'serial',
					'not null' => TRUE,
					'description' => t('primary key'),
				),
				'name' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => 64,
					'not null' => TRUE,
					'description' => t('The import mapping name'),
				),
				'mapping' => array(
					'type' => 'text',
					'size' => 'medium',
					'not null' => TRUE,
					'description' => t('import file mapping'),
				),	
			),
			'primary key' => array('mapping_id'),
		);
	
	return $schema;
}

/*
 * update for official 1.0 release
 */ 
function civicrm_import_update_6100() {
	$schema['civicrm_import_mapping'] = array(
			'description' => t('Stores civicrm import mappings'),
			'fields' => array(		
				'mapping_id' => array(
					'type' => 'serial',
					'not null' => TRUE,
					'description' => t('primary key'),
				),
				'name' => array(
					'type' => 'varchar',
					'not null' => FALSE,
					'length' => 64,
					'not null' => TRUE,
					'description' => t('The import mapping name'),
				),
				'mapping' => array(
					'type' => 'text',
					'size' => 'medium',
					'not null' => TRUE,
					'description' => t('import file mapping'),
				),	
			),
			'primary key' => array('mapping_id'),
	);
  $ret = array();
  db_create_table($ret, 'civicrm_import_mapping', $schema['civicrm_import_mapping']);
  return $ret;
}